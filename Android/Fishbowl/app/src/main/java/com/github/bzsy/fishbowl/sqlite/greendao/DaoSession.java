package com.github.bzsy.fishbowl.sqlite.greendao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig airTemperatureEntityDaoConfig;
    private final DaoConfig humidityEntityDaoConfig;
    private final DaoConfig lightEntityDaoConfig;
    private final DaoConfig imageEntityDaoConfig;

    private final AirTemperatureEntityDao airTemperatureEntityDao;
    private final HumidityEntityDao humidityEntityDao;
    private final LightEntityDao lightEntityDao;
    private final ImageEntityDao imageEntityDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        airTemperatureEntityDaoConfig = daoConfigMap.get(AirTemperatureEntityDao.class).clone();
        airTemperatureEntityDaoConfig.initIdentityScope(type);

        humidityEntityDaoConfig = daoConfigMap.get(HumidityEntityDao.class).clone();
        humidityEntityDaoConfig.initIdentityScope(type);

        lightEntityDaoConfig = daoConfigMap.get(LightEntityDao.class).clone();
        lightEntityDaoConfig.initIdentityScope(type);

        imageEntityDaoConfig = daoConfigMap.get(ImageEntityDao.class).clone();
        imageEntityDaoConfig.initIdentityScope(type);

        airTemperatureEntityDao = new AirTemperatureEntityDao(airTemperatureEntityDaoConfig, this);
        humidityEntityDao = new HumidityEntityDao(humidityEntityDaoConfig, this);
        lightEntityDao = new LightEntityDao(lightEntityDaoConfig, this);
        imageEntityDao = new ImageEntityDao(imageEntityDaoConfig, this);

        registerDao(AirTemperatureEntity.class, airTemperatureEntityDao);
        registerDao(HumidityEntity.class, humidityEntityDao);
        registerDao(LightEntity.class, lightEntityDao);
        registerDao(ImageEntity.class, imageEntityDao);
    }
    
    public void clear() {
        airTemperatureEntityDaoConfig.getIdentityScope().clear();
        humidityEntityDaoConfig.getIdentityScope().clear();
        lightEntityDaoConfig.getIdentityScope().clear();
        imageEntityDaoConfig.getIdentityScope().clear();
    }

    public AirTemperatureEntityDao getAirTemperatureEntityDao() {
        return airTemperatureEntityDao;
    }

    public HumidityEntityDao getHumidityEntityDao() {
        return humidityEntityDao;
    }

    public LightEntityDao getLightEntityDao() {
        return lightEntityDao;
    }

    public ImageEntityDao getImageEntityDao() {
        return imageEntityDao;
    }

}
